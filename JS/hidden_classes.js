function Point(x, y) {
    this.x = x;
    this.y = y;
}
var p1 = new Point(1, 2);
p1.a = 5;
p1.b = 6;
var p2 = new Point(3, 4);
p2.b = 7;
p2.a = 8;
/*
В подобной ситуации можно предположить, что у объектов p1 и p2 будет один и тот же скрытый класс 
и одно и то же дерево переходов скрытых классов. Однако, на самом деле это не так.
В объект p1 первым добавляется свойство a, а затем — свойство b.
В объект p2 сначала добавляют свойство b, а затем — a.
В результате объекты p1 и p2 будут иметь различные скрытые классы — результат различных путей переходов между скрытыми классами.
В подобных случаях гораздо лучше инициализировать динамические свойства в одном и том же порядке для того,
чтобы скрытые классы могли быть использованы повторно.
*/